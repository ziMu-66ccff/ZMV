{
  "compilerOptions": {
    "target": "es2016",
    "jsx": "preserve",
    "jsxFactory": "React.createElement",
    "jsxFragmentFactory": "React.Fragment",

    /* Modules */
    "module": "ESNext",
    "rootDir": ".",
    "moduleResolution": "Bundler",
    "baseUrl": "./",
    "paths": {
      "@/*": ["src/*"],
      "~/*": ["./*"],
      "tests": ["src/tests/*"]
    },
    "resolveJsonModule": true,

    /* JavaScript Support */
    "allowJs": true,
    "checkJs": true,

    /* Emit */
    // "declaration": true,
    "noEmit": true,
    // "declarationMap": true,
    "sourceMap": true,
    "outDir": ".",
    "removeComments": true,
    // "declarationDir": "./types",
    "allowImportingTsExtensions": true,

    /* Interop Constraints */
    "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

    /* Type Checking */
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
    "strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
    "strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
    "strictBindCallApply": true /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */,
    "strictPropertyInitialization": true /* Check for class properties that are declared but not set in the constructor. */,
    "noImplicitThis": true /* Enable error reporting when 'this' is given the type 'any'. */,
    "alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
    "noUnusedLocals": true /* Enable error reporting when local variables aren't read. */,
    "noUnusedParameters": true /* Raise an error when a function parameter isn't read. */,
    "noFallthroughCasesInSwitch": true /* Enable error reporting for fallthrough cases in switch statements. */,
    "allowUnusedLabels": false /* Disable error reporting for unused labels. */,
    "allowUnreachableCode": false /* Disable error reporting for unreachable code. */,

    /* Completeness */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  },
  "include": ["src/**/*.ts", "tests/**/*.ts", "*.d.ts"],
  "exclude": [
    "node_modules",
    "dist",
    ".eslintrc.*",
    "prettier.config.*",
    "commitlint.config.*",
    "jest.config.*",
    "rollup.config.*"
  ]
}
